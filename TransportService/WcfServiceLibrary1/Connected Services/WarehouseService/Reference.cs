//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfServiceLibrary1.WarehouseService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoadCarrier", Namespace="http://schemas.datacontract.org/2004/07/DataStructures")]
    [System.SerializableAttribute()]
    public partial class LoadCarrier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LockReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ZField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Lock {
            get {
                return this.LockField;
            }
            set {
                if ((this.LockField.Equals(value) != true)) {
                    this.LockField = value;
                    this.RaisePropertyChanged("Lock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LockReason {
            get {
                return this.LockReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.LockReasonField, value) != true)) {
                    this.LockReasonField = value;
                    this.RaisePropertyChanged("LockReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Z {
            get {
                return this.ZField;
            }
            set {
                if ((this.ZField.Equals(value) != true)) {
                    this.ZField = value;
                    this.RaisePropertyChanged("Z");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WarehouseService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/StoreLoadCarrier", ReplyAction="http://tempuri.org/IService1/StoreLoadCarrierResponse")]
        void StoreLoadCarrier(WcfServiceLibrary1.WarehouseService.LoadCarrier loadCarrier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/StoreLoadCarrier", ReplyAction="http://tempuri.org/IService1/StoreLoadCarrierResponse")]
        System.Threading.Tasks.Task StoreLoadCarrierAsync(WcfServiceLibrary1.WarehouseService.LoadCarrier loadCarrier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DetermineLoadCarrierDestination", ReplyAction="http://tempuri.org/IService1/DetermineLoadCarrierDestinationResponse")]
        string DetermineLoadCarrierDestination(WcfServiceLibrary1.WarehouseService.LoadCarrier loadCarrier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DetermineLoadCarrierDestination", ReplyAction="http://tempuri.org/IService1/DetermineLoadCarrierDestinationResponse")]
        System.Threading.Tasks.Task<string> DetermineLoadCarrierDestinationAsync(WcfServiceLibrary1.WarehouseService.LoadCarrier loadCarrier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WhereIsLoadCarrier", ReplyAction="http://tempuri.org/IService1/WhereIsLoadCarrierResponse")]
        string WhereIsLoadCarrier(string loadCarrierID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WhereIsLoadCarrier", ReplyAction="http://tempuri.org/IService1/WhereIsLoadCarrierResponse")]
        System.Threading.Tasks.Task<string> WhereIsLoadCarrierAsync(string loadCarrierID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WcfServiceLibrary1.WarehouseService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WcfServiceLibrary1.WarehouseService.IService1>, WcfServiceLibrary1.WarehouseService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void StoreLoadCarrier(WcfServiceLibrary1.WarehouseService.LoadCarrier loadCarrier) {
            base.Channel.StoreLoadCarrier(loadCarrier);
        }
        
        public System.Threading.Tasks.Task StoreLoadCarrierAsync(WcfServiceLibrary1.WarehouseService.LoadCarrier loadCarrier) {
            return base.Channel.StoreLoadCarrierAsync(loadCarrier);
        }
        
        public string DetermineLoadCarrierDestination(WcfServiceLibrary1.WarehouseService.LoadCarrier loadCarrier) {
            return base.Channel.DetermineLoadCarrierDestination(loadCarrier);
        }
        
        public System.Threading.Tasks.Task<string> DetermineLoadCarrierDestinationAsync(WcfServiceLibrary1.WarehouseService.LoadCarrier loadCarrier) {
            return base.Channel.DetermineLoadCarrierDestinationAsync(loadCarrier);
        }
        
        public string WhereIsLoadCarrier(string loadCarrierID) {
            return base.Channel.WhereIsLoadCarrier(loadCarrierID);
        }
        
        public System.Threading.Tasks.Task<string> WhereIsLoadCarrierAsync(string loadCarrierID) {
            return base.Channel.WhereIsLoadCarrierAsync(loadCarrierID);
        }
    }
}
